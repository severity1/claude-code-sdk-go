version: "2"

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

linters-settings:
  depguard:
    rules:
      main:
        allow:
          - $gostd
          - github.com/severity1/claude-code-sdk-go

  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - io.Copy(*os.File)
      - io.Copy(os.Stdout)

  gocritic:
    enabled-tags:
      - diagnostic
      - style
      - performance
    disabled-checks:
      - ifElseChain
      - octalLiteral
      - wrapperFunc

  gocyclo:
    min-complexity: 15

  godot:
    scope: declarations
    exclude:
      # Exclude links
      - "^[ ]*//[ ]*@"
    capital: false

  goimports:
    local-prefixes: github.com/severity1/claude-code-sdk-go

  govet:
    enable:
      - shadow
    disable:
      - fieldalignment

  lll:
    line-length: 120
    tab-width: 1

  misspell:
    locale: US

  nolintlint:
    allow-leading-space: true
    allow-unused: false
    require-explanation: false
    require-specific: false

  revive:
    rules:
      - name: exported
        disabled: false
      - name: package-comments
        disabled: true
      - name: var-naming
        disabled: false
        arguments:
          - ["ID", "URL", "HTTP", "JSON", "API", "SDK", "CLI", "UUID", "AWS", "GCP"]

  staticcheck:
    checks: ["all"]

  stylecheck:
    checks: ["all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022"]
    dot-import-whitelist:
      - fmt

  unparam:
    check-exported: false

  unused:
    check-exported: false

  whitespace:
    multi-if: false
    multi-func: false

linters:
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - copyloopvar
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - mnd
    - goprintffuncname
    - gosec
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - revive
    - rowserrcheck
    - staticcheck
    - unconvert
    - unparam
    - unused
    - whitespace

issues:
  exclude-dirs:
    - testdata
    - vendor
  uniq-by-line: true
  exclude-rules:
    - path: _test\.go
      linters:
        - mnd
        - funlen
        - goconst
        - lll

    # Exclude some linters from running on tests files
    - path: _test\.go
      text: "func name will be used as test\\.Test.* by other packages, and that stutters; consider calling this"
      linters:
        - stylecheck

    # Ignore shadowing of err
    - linters: [govet]
      text: 'declaration of "(err|ctx)" shadows declaration at'

    # Ignore long lines for generated code or links
    - linters: [lll]
      source: "^//go:generate"

    # Ignore missing comments on exported types/functions in examples
    - path: examples/
      linters: [revive]
      text: "exported.*should have comment.*or be unexported"

    # Interface design constraints - cannot change without breaking API
    - linters: [gocritic]
      text: "hugeParam"
    - linters: [gocritic] 
      text: "unnamedResult"

    # Expected subprocess execution - core SDK functionality  
    - linters: [gosec]
      text: "G204"

    # Intentional cleanup error ignores - already using _ prefix
    - linters: [errcheck]
      text: "Error return value of.*is not checked"
      source: "_ = .*\\.Close\\(\\)"
    - linters: [errcheck] 
      text: "Error return value of.*is not checked"
      source: "_ = os\\.Remove"
    - linters: [errcheck]
      text: "Error return value of.*is not checked"
      source: "_ = .*\\.Kill\\(\\)"
    - linters: [errcheck]
      text: "Error return value of.*is not checked"
      source: "_ = .*Close\\(\\)"
    
    # Test environment isolation - errors in Setenv are not critical
    - path: _test\.go
      linters: [errcheck]
      text: "os.Setenv"
      
    # Optional field parsing - blank identifier is intentional
    - linters: [errcheck]
      text: ".*, _ := .*\\[.*\\].*// Optional field"

    # Complex but cohesive initialization function
    - linters: [funlen]
      text: "Function 'Connect' is too long"

    # Complex test functions - comprehensive testing approach
    - linters: [gocyclo]
      text: "Test.*is high"

  exclude-use-default: false
  max-issues-per-linter: 50
  max-same-issues: 3